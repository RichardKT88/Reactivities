{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modelStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListitemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToogle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","ActivityListitemAttendee","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","position","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.ef59b9a5.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise ((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response; \r\n}, (error: AxiosError) => {\r\n    const {data, status, config, headers} = error.response!;\r\n    switch(status) {\r\n        case 400:          \r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;        \r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n\r\n}\r\n\r\nconst Account = {\r\n   current: () => requests.get<User>('/account'),\r\n   login: (user: UserFormValues) => requests.post<User>('/account/login', user), \r\n   register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n   fbLogin:(accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}) \r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile:(profile: Partial<Profile>) => requests.put(`/profiles/`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => \r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.city = activity.city;\r\n            this.venue = activity.venue;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n    \r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor (user : User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all' :\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if(key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) => \r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy')\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {  \r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n              })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id : string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }    \r\n\r\n    createActivity = async (activity : ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity =  new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);            \r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }               \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n          \r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {               \r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {               \r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = \r\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToogle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n    \r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n}\r\n\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction (\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'followings';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async(username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false );\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if(photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;                \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }   \r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username){\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })  \r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n\r\n    }\r\n    \r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false;\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n       window.FB.getLoginStatus(response => {\r\n           if(response.status === 'connected'){\r\n               this.fbAccessToken = response.authResponse.accessToken;\r\n           }\r\n       })\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            })\r\n        }\r\n        if (this.fbAccessToken){\r\n            apiLogin(this.fbAccessToken);\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            },{scope: 'public_profile, email'})\r\n        }       \r\n    }\r\n} \r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modelStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)    \r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor () {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n    \r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react'\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const {userStore: {user, logout}} = useStore();\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight:10}}/>\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name='Activities' />\r\n                <Menu.Item as={NavLink} to='/errors' name='Errors' />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='logout' icon='power' />\r\n                        </Dropdown.Menu>                        \r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const {activityStore:{predicate, setPredicate}} = useStore();\r\n    return (\r\n        <>\r\n            <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 27 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters'/>\r\n                <Menu.Item \r\n                    content='All activities' \r\n                    active={predicate.has('all')}\r\n                    onClick={() => setPredicate('all', 'true')}\r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm going\"\r\n                    active={predicate.has('isGoing')}\r\n                    onClick={() => setPredicate('isGoing', 'true')} \r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm hosting\" \r\n                    active={predicate.has('isHosting')}\r\n                    onClick={() => setPredicate('isHost', 'true')}\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar \r\n                onChange={(date: Date) => setPredicate('startDate', date as Date)}\r\n                value = {predicate.get('startDate') || new Date()}\r\n            />\r\n        </>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile : Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}: Props){\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if(userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string) {\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{width: '100%'}}>\r\n                <Button \r\n                    fluid \r\n                    color='teal' \r\n                    content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{width: '100%'}}>\r\n                <Button \r\n                    fluid\r\n                    basic \r\n                    color={ profile.following ? 'red' : 'green'} \r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.username)} \r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n})\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\nexport default observer(function ProfileCard({profile} : Props ) {\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'}/>\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>Bio goes here</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n        \t    <Icon name='user'/>\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile}/>\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 4\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image \r\n                                size='mini' \r\n                                circular src={ attendee.image || '/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following ? styles : null} \r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee}/>\r\n                    </Popup.Content>\r\n                </Popup>\r\n                \r\n            ))}\r\n        </List>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListitemAttendee from './ActivityListitemAttendee';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({activity} : Props) {\r\n    \r\n    return (\r\n       <Segment.Group>\r\n           <Segment>\r\n               {activity.isCancelled &&\r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}} />\r\n               }\r\n               <Item.Group>\r\n                   <Item>\r\n                       <Item.Image style={{marginBottom: 3}} size=\"tiny\" circular src={activity.host?.image || '/assets/user.png'} />\r\n                       <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\r\n                            <Item.Description>Hosted By <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isHost && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                       </Item.Content>                       \r\n                   </Item>\r\n               </Item.Group>\r\n           </Segment>\r\n           <Segment>\r\n               <span>\r\n                   <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa' )}\r\n                   <Icon name='marker'/> {activity.venue}\r\n               </span>\r\n           </Segment>\r\n           <Segment secondary>\r\n              <ActivityListitemAttendee attendees={activity.attendees!} />\r\n           </Segment>\r\n           <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n           </Segment>\r\n       </Segment.Group>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList(){\r\n\r\n    const {activityStore} = useStore();\r\n    const {groupedActivities} = activityStore;\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) => (\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                        {activities.map(activity => (\r\n                            <ActivityListItem key={activity.id} activity={activity} />\r\n                            ))}\r\n                </Fragment>            \r\n            ))}           \r\n        </>\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard(){\r\n    const {activityStore} = useStore();\r\n    const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(activityRegistry.size <= 1 ) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n  \r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder/>\r\n                        <ActivityListItemPlaceholder/>\r\n                    </>\r\n                ) : (\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={handleGetNext}\r\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                        initialLoad={false}\r\n                    >\r\n                        <ActivityList /> \r\n                    </InfiniteScroll>\r\n                )}               \r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n              <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              <Loader active={loadingNext}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{email:'', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error' render={() => \r\n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props ) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup'; \r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email:'', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required()\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage\r\n                        name='error' render={() => \r\n                        <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Image,\r\n  Button,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number,\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value) }\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n  \r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker'\r\n\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date((field.value))) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n           />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Formik, Form} from 'formik';\r\nimport * as Yup from 'yup'; \r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const {activityStore} = useStore();\r\n    const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'), \r\n        category: Yup.string().required(), \r\n        date: Yup.string().required('Date is required').nullable(), \r\n        city: Yup.string().required(), \r\n        venue: Yup.string().required(), \r\n    })\r\n\r\n    useEffect(() => {\r\n      if(id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\r\n    }, [id, loadActivity]);\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if(!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }  \r\n\r\n    if(loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik\r\n                validationSchema={validationSchema} \r\n                enableReinitialize \r\n                initialValues={activity} \r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                     <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput placeholder='Title' name='title' />\r\n                        <MyTextArea placeholder='Description'  name='description' rows={3}/>\r\n                        <MySelectInput placeholder='Category'  name='category' options={categoryOptions} />\r\n                        <MyDateInput \r\n                            placeholderText='Date'  \r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa' \r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='City'  name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button \r\n                            disabled={isSubmitting || !dirty || !isValid }\r\n                            loading={isSubmitting} floated='right' \r\n                            positive type='submit' content='Submit'/>\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'/>\r\n                     </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n    \r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik \r\n                        onSubmit={(values, {resetForm}) => \r\n                            commentStore.addComment(values).then(() => resetForm())}\r\n                            initialValues={{body: ''}}\r\n                            validationSchema={Yup.object({\r\n                                body: Yup.string().required()\r\n                            })}\r\n                    >\r\n                        {({isSubmitting, isValid, handleSubmit})=> (\r\n                            <Form className='ui form'>\r\n                                <Field name='body'>\r\n                                    {(props: FieldProps) => (\r\n                                        <div style={{position: 'relative'}}>\r\n                                            <Loader active={isSubmitting}/>\r\n                                            <textarea\r\n                                                placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                                rows={2}\r\n                                                {...props.field}\r\n                                                onKeyPress={e => {\r\n                                                    if (e.key === 'Enter' && e.shiftKey){\r\n                                                        return;\r\n                                                    }\r\n                                                    if (e.key === 'Enter' && !e.shiftKey){\r\n                                                        e.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Field>\r\n                            </Form>\r\n                        )}   \r\n                    </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                           <Comment.Avatar src={comment.image || '/assets/user.png'}/>\r\n                           <Comment.Content>\r\n                               <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                                   {comment.displayName}\r\n                                </Comment.Author>\r\n                               <Comment.Metadata>\r\n                                   <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                               </Comment.Metadata>\r\n                               <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>                             \r\n                           </Comment.Content>\r\n                       </Comment>\r\n                    ))}\r\n               \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({activity}: Props) {\r\n    const {activityStore: {updateAttendance, loading, cancelActivityToogle }} = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled && \r\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top:20}} ribbon color='red' content='Cancelled'/>\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button \r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToogle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link}\r\n                            disabled={activity.isCancelled} \r\n                            to={`/manage/${activity.id}`} \r\n                            color='orange' \r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>                    \r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button disabled={activity.isCancelled} loading={loading} onClick={updateAttendance} color='teal'>Join Activity</Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                        {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: {attendees, host} }: Props) {\r\n    if (!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People' } going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username && \r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following && \r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n    const {activityStore} = useStore();\r\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n        return () => clearSelectedActivity();       \r\n    }, [id, loadActivity, clearSelectedActivity])\r\n\r\n    if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity}/>\r\n                <ActivityDetailedInfo activity={activity}/>\r\n                <ActivityDetailedChat activityId={activity.id} />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSidebar activity={activity}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )    \r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n    const {commonStore} = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details && \r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n\r\n})","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header \r\n                        floated='left' \r\n                        icon='user' \r\n                        content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following` } />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropZone({setFiles}: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  }\r\n\r\n  const dzActive = {\r\n    borderColor: 'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here' />    \r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropZone\";\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropZone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n                {files && files.length > 0 && \r\n                <>\r\n                    <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}/>\r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                    </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile}: Props ) {\r\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto }} = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos'/>\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic \r\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />                \r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n                    ) : (\r\n                            <Card.Group itemsPerRow={5}>\r\n                                {profile.photos?.map(photo => (\r\n                                    <Card key={photo.id}>\r\n                                        <Image src={photo.url} />\r\n                                        {isCurrentUser && (\r\n                                            <Button.Group fluid widths={2}>\r\n                                                <Button\r\n                                                    basic\r\n                                                    color='green'\r\n                                                    content='Main'\r\n                                                    name={'main' + photo.id}\r\n                                                    disabled={photo.isMain}\r\n                                                    loading={target === 'main' + photo.id && loading}\r\n                                                    onClick={e => handleSetMainPhoto(photo, e)}\r\n                                                />\r\n                                                <Button \r\n                                                    basic \r\n                                                    color='red' \r\n                                                    icon='trash'\r\n                                                    loading={target === photo.id && loading}\r\n                                                    onClick={e => handleDeletePhoto(photo, e)}\r\n                                                    disabled={photo.isMain}\r\n                                                    name={photo.id}\r\n                                                />\r\n                                            </Button.Group>\r\n                                        )}\r\n                                    </Card>\r\n                                ))}  \r\n                            </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile} : Props){\r\n    const {profileStore} = useStore();\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane>},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />}\r\n    ]\r\n\r\n    return (\r\n        <Tab \r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile} : Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                   <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }       \r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile && \r\n                    <>\r\n                        <ProfileHeader profile={profile}/>\r\n                        <ProfileContent profile={profile} />\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps  } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return(\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path={'/profiles/:username'} component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,   \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}